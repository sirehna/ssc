before_script:
  - git submodule sync --recursive
  - git submodule update --init --recursive

stages:
  - lint
  - build

lint:
   stage: lint
   script:
     # Check for tabs
     - cd ssc &&
       if grep --recursive --include={*.cpp,*.c,*.hpp,*.h,*.md,*.yml,*.cmake.*.xml,*.html,*.in,*.txt}
               --exclude-dir={eigen,f2c,gcovr,geographiclib,gmock,google-test,gtest,websocketpp,yaml-cpp,geometry,integrate,interpolation} -P "\t" . ;
       then echo "Tabs found in the lines shown above."; false;
       else echo "Repo passed no-tabs check."; fi &&
       cd ..

build:windows:
   stage: build
   script:
     - docker run --rm -v /etc/group:/etc/group:ro  -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/opt/share -w /opt/share mydockcross/windows-x64
          /bin/bash -c "whoami &&
                        mkdir /opt/share/.wine &&
                        export WINEPREFIX=/opt/share/.wine &&
                        wine winecfg &&
                        cmake -Wno-dev
                        -G Ninja
                        -DCMAKE_INSTALL_PREFIX:PATH=/opt/ssc
                        -DIPOPT_ROOT:PATH=/opt/CoinIpopt
                        -DBOOST_ROOT:PATH=/opt/boost
                        -DBOOST_INCLUDEDIR:PATH=/opt/boost/include
                        -DBoost_INCLUDE_DIR:PATH=/opt/boost/include
                        -DBOOST_LIBRARYDIR:PATH=/opt/boost/lib
                        -DBoost_NO_SYSTEM_PATHS:BOOL=OFF
                        -DBoost_LIBRARY_DIR_RELEASE:PATH=/opt/boost/lib
                        -DBoost_DEBUG=1
                        -DCOIN_BLAS:PATH=/opt/CoinIpopt/lib/libcoinblas.a
                        -DCOIN_LAPACK:PATH=/opt/CoinIpopt/lib/libcoinlapack.a
                        -DCOIN_MUMPS:PATH=/opt/CoinIpopt/lib/libcoinmumps.a
                        -DCOIN_IPOPT:PATH=/opt/CoinIpopt/lib/libipopt.a
                        -DIPOPT_INCLUDE_DIRS:PATH=/opt/CoinIpopt/include/coin
                        -DIPOPT_LIB_DYNAMIC=\"gfortran;gcc;quadmath;m\"
                        /opt/share/ssc"
     - docker run --rm -v /etc/group:/etc/group:ro  -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/opt/share -w /opt/share mydockcross/windows-x64
          /bin/bash -c "mkdir -p /opt/share/.wine && export WINEPREFIX=/opt/share/.wine && wine winecfg && ninja package"
     - docker run --rm -v /etc/group:/etc/group:ro  -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/opt/share -w /opt/share mydockcross/windows-x64
          /bin/bash -c "mkdir -p /opt/share/.wine && export WINEPREFIX=/opt/share/.wine && wine winecfg && wine ./run_all_tests"

build:debian:
   stage: build
   script:
     - docker build -f Dockerfile -t ssc .
     - docker run --rm -v /etc/group:/etc/group:ro  -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/opt/share -w /opt/share ssc
          cmake -Wno-dev
          -G Ninja
          -DCMAKE_INSTALL_PREFIX:PATH=/opt/ssc
          -DIPOPT_ROOT:PATH=/opt/CoinIpopt
          -DBOOST_ROOT:PATH=/opt/boost
          /opt/share/ssc
     - docker run --rm -v /etc/group:/etc/group:ro  -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/opt/share -w /opt/share ssc ninja package
     - docker run --rm -v /etc/group:/etc/group:ro  -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/opt/share -w /opt/share ssc ./run_all_tests
   artifacts:
     paths:
     - ssc.deb

